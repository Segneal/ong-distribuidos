services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: ong_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: ong_management
      MYSQL_USER: ong_user
      MYSQL_PASSWORD: ong_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/mysql_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/network_tables_migration.sql:/docker-entrypoint-initdb.d/02-network.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - ong_network

  # Zookeeper para Kafka
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: ong_zookeeper
    ports:
      - "2181:2181"
    networks:
      - ong_network

  # Apache Kafka
  kafka:
    image: wurstmeister/kafka:latest
    container_name: ong_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "solicitud-donaciones:1:1,transferencia-donaciones:1:1,oferta-donaciones:1:1,baja-solicitud-donaciones:1:1,eventossolidarios:1:1,baja-evento-solidario:1:1,adhesion-evento:1:1,transferencia-donaciones-empuje-comunitario:1:1,adhesion-evento-empuje-comunitario:1:1"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - kafka_data:/kafka
    networks:
      - ong_network

  # Microservicio de Usuarios
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: ong_user_service
    ports:
      - "50051:50051"
    environment:
      - DB_HOST=mysql
      - DB_NAME=ong_management
      - DB_USER=ong_user
      - DB_PASSWORD=ong_pass
      - DB_PORT=3306
      - GRPC_PORT=50051
      - JWT_SECRET=your-secret-key-change-in-production
      - KAFKA_BROKERS=kafka:9092
      - ORGANIZATION_ID=empuje-comunitario
    depends_on:
      - mysql
      - kafka
    networks:
      - ong_network

  # Microservicio de Inventario
  inventory-service:
    build:
      context: .
      dockerfile: ./inventory-service/Dockerfile
    container_name: ong_inventory_service
    ports:
      - "50052:50052"
    environment:
      - DB_HOST=mysql
      - DB_NAME=ong_management
      - DB_USER=ong_user
      - DB_PASSWORD=ong_pass
      - DB_PORT=3306
      - GRPC_PORT=50052
      - KAFKA_BROKERS=kafka:9092
      - ORGANIZATION_ID=empuje-comunitario
    depends_on:
      - mysql
      - kafka
    networks:
      - ong_network

  # Microservicio de Eventos
  events-service:
    build:
      context: .
      dockerfile: ./events-service/Dockerfile
    container_name: ong_events_service
    ports:
      - "50053:50053"
    environment:
      - DB_HOST=mysql
      - DB_NAME=ong_management
      - DB_USER=ong_user
      - DB_PASSWORD=ong_pass
      - DB_PORT=3306
      - EVENTS_SERVICE_PORT=50053
      - KAFKA_BROKERS=kafka:9092
      - ORGANIZATION_ID=empuje-comunitario
    depends_on:
      - mysql
      - kafka
    networks:
      - ong_network

  # Microservicio de Mensajer√≠a
  messaging-service:
    build:
      context: .
      dockerfile: ./messaging-service/Dockerfile
    container_name: ong_messaging_service
    ports:
      - "50054:50054"
      - "8000:8000"
    environment:
      - KAFKA_ENABLED=true
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_GROUP_ID=empuje-comunitario-group
      - ORGANIZATION_ID=empuje-comunitario
      - KAFKA_RETRY_ATTEMPTS=3
      - KAFKA_RETRY_DELAY=1000
      - KAFKA_MAX_RETRY_DELAY=10000
      - KAFKA_AUTO_CREATE_TOPICS=true
      - KAFKA_REPLICATION_FACTOR=1
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ong_management
      - DB_USER=ong_user
      - DB_PASSWORD=ong_pass
      - SERVICE_PORT=50054
      - LOG_LEVEL=INFO
    depends_on:
      - mysql
      - kafka
    networks:
      - ong_network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ong_api_gateway
    ports:
      - "3000:3000"
    environment:
      - USER_SERVICE_URL=user-service:50051
      - INVENTORY_SERVICE_URL=inventory-service:50052
      - EVENTS_SERVICE_URL=events-service:50053
      - MESSAGING_SERVICE_URL=http://messaging-service:8000
      - EMAIL_SERVICE_URL=http://email-service:3002
      - JWT_SECRET=your-secret-key-change-in-production
      - JWT_EXPIRES_IN=15m
      - REFRESH_TOKEN_EXPIRES_IN=7d
    depends_on:
      - user-service
      - inventory-service
      - events-service
      - messaging-service
      - email-service
    networks:
      - ong_network

  # MailHog - Servidor SMTP de prueba con UI web
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ong_mailhog
    ports:
      - "1025:1025"  # Puerto SMTP
      - "8025:8025"  # Puerto Web UI
    networks:
      - ong_network

  # Servicio de Email
  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    container_name: ong_email_service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=development
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - SMTP_USER=
      - SMTP_PASS=
      - SMTP_FROM=noreply@empujecomunitario.org
      - FRONTEND_URL=http://localhost:3001
    depends_on:
      - mailhog
    networks:
      - ong_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ong_frontend
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api
    depends_on:
      - api-gateway
    networks:
      - ong_network

volumes:
  mysql_data:
  kafka_data:

networks:
  ong_network:
    driver: bridge